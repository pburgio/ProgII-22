
a.out:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000318 <.interp>:
 318:	2f                   	(bad)  
 319:	6c                   	insb   (%dx),%es:(%rdi)
 31a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 321:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 326:	78 2d                	js     355 <_init-0xcab>
 328:	78 38                	js     362 <_init-0xc9e>
 32a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 330:	6f                   	outsl  %ds:(%rsi),(%dx)
 331:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.gnu.property:

0000000000000338 <.note.gnu.property>:
 338:	04 00                	add    $0x0,%al
 33a:	00 00                	add    %al,(%rax)
 33c:	10 00                	adc    %al,(%rax)
 33e:	00 00                	add    %al,(%rax)
 340:	05 00 00 00 47       	add    $0x47000000,%eax
 345:	4e 55                	rex.WRX push %rbp
 347:	00 02                	add    %al,(%rdx)
 349:	00 00                	add    %al,(%rax)
 34b:	c0 04 00 00          	rolb   $0x0,(%rax,%rax,1)
 34f:	00 03                	add    %al,(%rbx)
 351:	00 00                	add    %al,(%rax)
 353:	00 00                	add    %al,(%rax)
 355:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000000358 <.note.gnu.build-id>:
 358:	04 00                	add    $0x0,%al
 35a:	00 00                	add    %al,(%rax)
 35c:	14 00                	adc    $0x0,%al
 35e:	00 00                	add    %al,(%rax)
 360:	03 00                	add    (%rax),%eax
 362:	00 00                	add    %al,(%rax)
 364:	47                   	rex.RXB
 365:	4e 55                	rex.WRX push %rbp
 367:	00 2d 9c 12 c2 14    	add    %ch,0x14c2129c(%rip)        # 14c21609 <_end+0x14c1d4a9>
 36d:	d2 cf                	ror    %cl,%bh
 36f:	93                   	xchg   %eax,%ebx
 370:	bd 8d dd cf a4       	mov    $0xa4cfdd8d,%ebp
 375:	47 e5 64             	rex.RXB in $0x64,%eax
 378:	69                   	.byte 0x69
 379:	4b                   	rex.WXB
 37a:	bb                   	.byte 0xbb
 37b:	32                   	.byte 0x32

Disassembly of section .note.ABI-tag:

000000000000037c <.note.ABI-tag>:
 37c:	04 00                	add    $0x0,%al
 37e:	00 00                	add    %al,(%rax)
 380:	10 00                	adc    %al,(%rax)
 382:	00 00                	add    %al,(%rax)
 384:	01 00                	add    %eax,(%rax)
 386:	00 00                	add    %al,(%rax)
 388:	47                   	rex.RXB
 389:	4e 55                	rex.WRX push %rbp
 38b:	00 00                	add    %al,(%rax)
 38d:	00 00                	add    %al,(%rax)
 38f:	00 03                	add    %al,(%rbx)
 391:	00 00                	add    %al,(%rax)
 393:	00 02                	add    %al,(%rdx)
 395:	00 00                	add    %al,(%rax)
 397:	00 00                	add    %al,(%rax)
 399:	00 00                	add    %al,(%rax)
	...

Disassembly of section .gnu.hash:

00000000000003a0 <.gnu.hash>:
 3a0:	02 00                	add    (%rax),%al
 3a2:	00 00                	add    %al,(%rax)
 3a4:	0c 00                	or     $0x0,%al
 3a6:	00 00                	add    %al,(%rax)
 3a8:	01 00                	add    %eax,(%rax)
 3aa:	00 00                	add    %al,(%rax)
 3ac:	06                   	(bad)  
 3ad:	00 00                	add    %al,(%rax)
 3af:	00 00                	add    %al,(%rax)
 3b1:	00 91 00 01 00 00    	add    %dl,0x100(%rcx)
 3b7:	00 0c 00             	add    %cl,(%rax,%rax,1)
 3ba:	00 00                	add    %al,(%rax)
 3bc:	00 00                	add    %al,(%rax)
 3be:	00 00                	add    %al,(%rax)
 3c0:	d0 65 ce             	shlb   -0x32(%rbp)
 3c3:	6d                   	insl   (%dx),%es:(%rdi)
 3c4:	15                   	.byte 0x15
 3c5:	98                   	cwtl   
 3c6:	0c 43                	or     $0x43,%al

Disassembly of section .dynsym:

00000000000003c8 <.dynsym>:
	...
 3e0:	5f                   	pop    %rdi
 3e1:	00 00                	add    %al,(%rax)
 3e3:	00 12                	add    %dl,(%rdx)
	...
 3f5:	00 00                	add    %al,(%rax)
 3f7:	00 27                	add    %ah,(%rdi)
 3f9:	01 00                	add    %eax,(%rax)
 3fb:	00 12                	add    %dl,(%rdx)
	...
 40d:	00 00                	add    %al,(%rax)
 40f:	00 c3                	add    %al,%bl
 411:	00 00                	add    %al,(%rax)
 413:	00 12                	add    %dl,(%rdx)
	...
 425:	00 00                	add    %al,(%rax)
 427:	00 b2 00 00 00 12    	add    %dh,0x12000000(%rdx)
	...
 43d:	00 00                	add    %al,(%rax)
 43f:	00 fb                	add    %bh,%bl
 441:	00 00                	add    %al,(%rax)
 443:	00 12                	add    %dl,(%rdx)
	...
 455:	00 00                	add    %al,(%rax)
 457:	00 55 00             	add    %dl,0x0(%rbp)
 45a:	00 00                	add    %al,(%rax)
 45c:	12 00                	adc    (%rax),%al
	...
 46e:	00 00                	add    %al,(%rax)
 470:	1f                   	(bad)  
 471:	00 00                	add    %al,(%rax)
 473:	00 20                	add    %ah,(%rax)
	...
 485:	00 00                	add    %al,(%rax)
 487:	00 43 01             	add    %al,0x1(%rbx)
 48a:	00 00                	add    %al,(%rax)
 48c:	12 00                	adc    (%rax),%al
	...
 49e:	00 00                	add    %al,(%rax)
 4a0:	10 00                	adc    %al,(%rax)
 4a2:	00 00                	add    %al,(%rax)
 4a4:	20 00                	and    %al,(%rax)
	...
 4b6:	00 00                	add    %al,(%rax)
 4b8:	3b 00                	cmp    (%rax),%eax
 4ba:	00 00                	add    %al,(%rax)
 4bc:	20 00                	and    %al,(%rax)
	...
 4ce:	00 00                	add    %al,(%rax)
 4d0:	9a                   	(bad)  
 4d1:	00 00                	add    %al,(%rax)
 4d3:	00 12                	add    %dl,(%rdx)
	...
 4e5:	00 00                	add    %al,(%rax)
 4e7:	00 34 01             	add    %dh,(%rcx,%rax,1)
 4ea:	00 00                	add    %al,(%rax)
 4ec:	22 00                	and    (%rax),%al
	...
 4fe:	00 00                	add    %al,(%rax)
 500:	13 01                	adc    (%rcx),%eax
 502:	00 00                	add    %al,(%rax)
 504:	11 00                	adc    %eax,(%rax)
 506:	1a 00                	sbb    (%rax),%al
 508:	40                   	rex
 509:	40 00 00             	add    %al,(%rax)
 50c:	00 00                	add    %al,(%rax)
 50e:	00 00                	add    %al,(%rax)
 510:	10 01                	adc    %al,(%rcx)
 512:	00 00                	add    %al,(%rax)
 514:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynstr:

0000000000000518 <.dynstr>:
 518:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 51c:	73 74                	jae    592 <_init-0xa6e>
 51e:	64 63 2b             	movslq %fs:(%rbx),%ebp
 521:	2b 2e                	sub    (%rsi),%ebp
 523:	73 6f                	jae    594 <_init-0xa6c>
 525:	2e 36 00 5f 5f       	cs add %bl,%ss:0x5f(%rdi)
 52a:	67 6d                	insl   (%dx),%es:(%edi)
 52c:	6f                   	outsl  %ds:(%rsi),(%dx)
 52d:	6e                   	outsb  %ds:(%rsi),(%dx)
 52e:	5f                   	pop    %rdi
 52f:	73 74                	jae    5a5 <_init-0xa5b>
 531:	61                   	(bad)  
 532:	72 74                	jb     5a8 <_init-0xa58>
 534:	5f                   	pop    %rdi
 535:	5f                   	pop    %rdi
 536:	00 5f 49             	add    %bl,0x49(%rdi)
 539:	54                   	push   %rsp
 53a:	4d 5f                	rex.WRB pop %r15
 53c:	64 65 72 65          	fs gs jb 5a5 <_init-0xa5b>
 540:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 547:	4d 
 548:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 54a:	6f                   	outsl  %ds:(%rsi),(%dx)
 54b:	6e                   	outsb  %ds:(%rsi),(%dx)
 54c:	65 54                	gs push %rsp
 54e:	61                   	(bad)  
 54f:	62                   	(bad)  
 550:	6c                   	insb   (%dx),%es:(%rdi)
 551:	65 00 5f 49          	add    %bl,%gs:0x49(%rdi)
 555:	54                   	push   %rsp
 556:	4d 5f                	rex.WRB pop %r15
 558:	72 65                	jb     5bf <_init-0xa41>
 55a:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 561:	4d 
 562:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 564:	6f                   	outsl  %ds:(%rsi),(%dx)
 565:	6e                   	outsb  %ds:(%rsi),(%dx)
 566:	65 54                	gs push %rsp
 568:	61                   	(bad)  
 569:	62                   	(bad)  
 56a:	6c                   	insb   (%dx),%es:(%rdi)
 56b:	65 00 5f 5a          	add    %bl,%gs:0x5a(%rdi)
 56f:	4e 53                	rex.WRX push %rbx
 571:	6f                   	outsl  %ds:(%rsi),(%dx)
 572:	6c                   	insb   (%dx),%es:(%rdi)
 573:	73 45                	jae    5ba <_init-0xa46>
 575:	69 00 5f 5a 53 74    	imul   $0x74535a5f,(%rax),%eax
 57b:	34 65                	xor    $0x65,%al
 57d:	6e                   	outsb  %ds:(%rsi),(%dx)
 57e:	64 6c                	fs insb (%dx),%es:(%rdi)
 580:	49 63 53 74          	movslq 0x74(%r11),%rdx
 584:	31 31                	xor    %esi,(%rcx)
 586:	63 68 61             	movslq 0x61(%rax),%ebp
 589:	72 5f                	jb     5ea <_init-0xa16>
 58b:	74 72                	je     5ff <_init-0xa01>
 58d:	61                   	(bad)  
 58e:	69 74 73 49 63 45 45 	imul   $0x52454563,0x49(%rbx,%rsi,2),%esi
 595:	52 
 596:	53                   	push   %rbx
 597:	74 31                	je     5ca <_init-0xa36>
 599:	33 62 61             	xor    0x61(%rdx),%esp
 59c:	73 69                	jae    607 <_init-0x9f9>
 59e:	63 5f 6f             	movslq 0x6f(%rdi),%ebx
 5a1:	73 74                	jae    617 <_init-0x9e9>
 5a3:	72 65                	jb     60a <_init-0x9f6>
 5a5:	61                   	(bad)  
 5a6:	6d                   	insl   (%dx),%es:(%rdi)
 5a7:	49 54                	rex.WB push %r12
 5a9:	5f                   	pop    %rdi
 5aa:	54                   	push   %rsp
 5ab:	30 5f 45             	xor    %bl,0x45(%rdi)
 5ae:	53                   	push   %rbx
 5af:	36 5f                	ss pop %rdi
 5b1:	00 5f 5a             	add    %bl,0x5a(%rdi)
 5b4:	4e 53                	rex.WRX push %rbx
 5b6:	74 38                	je     5f0 <_init-0xa10>
 5b8:	69 6f 73 5f 62 61 73 	imul   $0x7361625f,0x73(%rdi),%ebp
 5bf:	65 34 49             	gs xor $0x49,%al
 5c2:	6e                   	outsb  %ds:(%rsi),(%dx)
 5c3:	69 74 44 31 45 76 00 	imul   $0x5f007645,0x31(%rsp,%rax,2),%esi
 5ca:	5f 
 5cb:	5a                   	pop    %rdx
 5cc:	4e 53                	rex.WRX push %rbx
 5ce:	6f                   	outsl  %ds:(%rsi),(%dx)
 5cf:	6c                   	insb   (%dx),%es:(%rdi)
 5d0:	73 45                	jae    617 <_init-0x9e9>
 5d2:	50                   	push   %rax
 5d3:	46 52                	rex.RX push %rdx
 5d5:	53                   	push   %rbx
 5d6:	6f                   	outsl  %ds:(%rsi),(%dx)
 5d7:	53                   	push   %rbx
 5d8:	5f                   	pop    %rdi
 5d9:	45 00 5f 5a          	add    %r11b,0x5a(%r15)
 5dd:	53                   	push   %rbx
 5de:	74 6c                	je     64c <_init-0x9b4>
 5e0:	73 49                	jae    62b <_init-0x9d5>
 5e2:	53                   	push   %rbx
 5e3:	74 31                	je     616 <_init-0x9ea>
 5e5:	31 63 68             	xor    %esp,0x68(%rbx)
 5e8:	61                   	(bad)  
 5e9:	72 5f                	jb     64a <_init-0x9b6>
 5eb:	74 72                	je     65f <_init-0x9a1>
 5ed:	61                   	(bad)  
 5ee:	69 74 73 49 63 45 45 	imul   $0x52454563,0x49(%rbx,%rsi,2),%esi
 5f5:	52 
 5f6:	53                   	push   %rbx
 5f7:	74 31                	je     62a <_init-0x9d6>
 5f9:	33 62 61             	xor    0x61(%rdx),%esp
 5fc:	73 69                	jae    667 <_init-0x999>
 5fe:	63 5f 6f             	movslq 0x6f(%rdi),%ebx
 601:	73 74                	jae    677 <_init-0x989>
 603:	72 65                	jb     66a <_init-0x996>
 605:	61                   	(bad)  
 606:	6d                   	insl   (%dx),%es:(%rdi)
 607:	49 63 54 5f 45       	movslq 0x45(%r15,%rbx,2),%rdx
 60c:	53                   	push   %rbx
 60d:	35 5f 50 4b 63       	xor    $0x634b505f,%eax
 612:	00 5f 5a             	add    %bl,0x5a(%rdi)
 615:	4e 53                	rex.WRX push %rbx
 617:	74 38                	je     651 <_init-0x9af>
 619:	69 6f 73 5f 62 61 73 	imul   $0x7361625f,0x73(%rdi),%ebp
 620:	65 34 49             	gs xor $0x49,%al
 623:	6e                   	outsb  %ds:(%rsi),(%dx)
 624:	69 74 43 31 45 76 00 	imul   $0x5f007645,0x31(%rbx,%rax,2),%esi
 62b:	5f 
 62c:	5a                   	pop    %rdx
 62d:	53                   	push   %rbx
 62e:	74 34                	je     664 <_init-0x99c>
 630:	63 6f 75             	movslq 0x75(%rdi),%ebp
 633:	74 00                	je     635 <_init-0x9cb>
 635:	6c                   	insb   (%dx),%es:(%rdi)
 636:	69 62 63 2e 73 6f 2e 	imul   $0x2e6f732e,0x63(%rdx),%esp
 63d:	36 00 5f 5f          	add    %bl,%ss:0x5f(%rdi)
 641:	63 78 61             	movslq 0x61(%rax),%edi
 644:	5f                   	pop    %rdi
 645:	61                   	(bad)  
 646:	74 65                	je     6ad <_init-0x953>
 648:	78 69                	js     6b3 <_init-0x94d>
 64a:	74 00                	je     64c <_init-0x9b4>
 64c:	5f                   	pop    %rdi
 64d:	5f                   	pop    %rdi
 64e:	63 78 61             	movslq 0x61(%rax),%edi
 651:	5f                   	pop    %rdi
 652:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 658:	7a 65                	jp     6bf <_init-0x941>
 65a:	00 5f 5f             	add    %bl,0x5f(%rdi)
 65d:	6c                   	insb   (%dx),%es:(%rdi)
 65e:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 665:	72 74                	jb     6db <_init-0x925>
 667:	5f                   	pop    %rdi
 668:	6d                   	insl   (%dx),%es:(%rdi)
 669:	61                   	(bad)  
 66a:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%rsi),%ebp
 671:	43 58                	rex.XB pop %r8
 673:	58                   	pop    %rax
 674:	5f                   	pop    %rdi
 675:	33 2e                	xor    (%rsi),%ebp
 677:	34 00                	xor    $0x0,%al
 679:	47                   	rex.RXB
 67a:	4c                   	rex.WR
 67b:	49                   	rex.WB
 67c:	42                   	rex.X
 67d:	43 5f                	rex.XB pop %r15
 67f:	32 2e                	xor    (%rsi),%ch
 681:	32 2e                	xor    (%rsi),%ch
 683:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

0000000000000686 <.gnu.version>:
 686:	00 00                	add    %al,(%rax)
 688:	03 00                	add    (%rax),%eax
 68a:	02 00                	add    (%rax),%al
 68c:	03 00                	add    (%rax),%eax
 68e:	03 00                	add    (%rax),%eax
 690:	03 00                	add    (%rax),%eax
 692:	03 00                	add    (%rax),%eax
 694:	00 00                	add    %al,(%rax)
 696:	02 00                	add    (%rax),%al
 698:	00 00                	add    %al,(%rax)
 69a:	00 00                	add    %al,(%rax)
 69c:	03 00                	add    (%rax),%eax
 69e:	02 00                	add    (%rax),%al
 6a0:	03 00                	add    (%rax),%eax

Disassembly of section .gnu.version_r:

00000000000006a8 <.gnu.version_r>:
 6a8:	01 00                	add    %eax,(%rax)
 6aa:	01 00                	add    %eax,(%rax)
 6ac:	01 00                	add    %eax,(%rax)
 6ae:	00 00                	add    %al,(%rax)
 6b0:	10 00                	adc    %al,(%rax)
 6b2:	00 00                	add    %al,(%rax)
 6b4:	20 00                	and    %al,(%rax)
 6b6:	00 00                	add    %al,(%rax)
 6b8:	74 29                	je     6e3 <_init-0x91d>
 6ba:	92                   	xchg   %eax,%edx
 6bb:	08 00                	or     %al,(%rax)
 6bd:	00 03                	add    %al,(%rbx)
 6bf:	00 55 01             	add    %dl,0x1(%rbp)
 6c2:	00 00                	add    %al,(%rax)
 6c4:	00 00                	add    %al,(%rax)
 6c6:	00 00                	add    %al,(%rax)
 6c8:	01 00                	add    %eax,(%rax)
 6ca:	01 00                	add    %eax,(%rax)
 6cc:	1d 01 00 00 10       	sbb    $0x10000001,%eax
 6d1:	00 00                	add    %al,(%rax)
 6d3:	00 00                	add    %al,(%rax)
 6d5:	00 00                	add    %al,(%rax)
 6d7:	00 75 1a             	add    %dh,0x1a(%rbp)
 6da:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 6e0:	61                   	(bad)  
 6e1:	01 00                	add    %eax,(%rax)
 6e3:	00 00                	add    %al,(%rax)
 6e5:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

00000000000006e8 <.rela.dyn>:
 6e8:	70 3d                	jo     727 <_init-0x8d9>
 6ea:	00 00                	add    %al,(%rax)
 6ec:	00 00                	add    %al,(%rax)
 6ee:	00 00                	add    %al,(%rax)
 6f0:	08 00                	or     %al,(%rax)
 6f2:	00 00                	add    %al,(%rax)
 6f4:	00 00                	add    %al,(%rax)
 6f6:	00 00                	add    %al,(%rax)
 6f8:	c0 11 00             	rclb   $0x0,(%rcx)
 6fb:	00 00                	add    %al,(%rax)
 6fd:	00 00                	add    %al,(%rax)
 6ff:	00 78 3d             	add    %bh,0x3d(%rax)
 702:	00 00                	add    %al,(%rax)
 704:	00 00                	add    %al,(%rax)
 706:	00 00                	add    %al,(%rax)
 708:	08 00                	or     %al,(%rax)
 70a:	00 00                	add    %al,(%rax)
 70c:	00 00                	add    %al,(%rax)
 70e:	00 00                	add    %al,(%rax)
 710:	79 12                	jns    724 <_init-0x8dc>
 712:	00 00                	add    %al,(%rax)
 714:	00 00                	add    %al,(%rax)
 716:	00 00                	add    %al,(%rax)
 718:	80 3d 00 00 00 00 00 	cmpb   $0x0,0x0(%rip)        # 71f <_init-0x8e1>
 71f:	00 08                	add    %cl,(%rax)
 721:	00 00                	add    %al,(%rax)
 723:	00 00                	add    %al,(%rax)
 725:	00 00                	add    %al,(%rax)
 727:	00 80 11 00 00 00    	add    %al,0x11(%rax)
 72d:	00 00                	add    %al,(%rax)
 72f:	00 08                	add    %cl,(%rax)
 731:	40 00 00             	add    %al,(%rax)
 734:	00 00                	add    %al,(%rax)
 736:	00 00                	add    %al,(%rax)
 738:	08 00                	or     %al,(%rax)
 73a:	00 00                	add    %al,(%rax)
 73c:	00 00                	add    %al,(%rax)
 73e:	00 00                	add    %al,(%rax)
 740:	08 40 00             	or     %al,0x0(%rax)
 743:	00 00                	add    %al,(%rax)
 745:	00 00                	add    %al,(%rax)
 747:	00 c8                	add    %cl,%al
 749:	3f                   	(bad)  
 74a:	00 00                	add    %al,(%rax)
 74c:	00 00                	add    %al,(%rax)
 74e:	00 00                	add    %al,(%rax)
 750:	06                   	(bad)  
 751:	00 00                	add    %al,(%rax)
 753:	00 0c 00             	add    %cl,(%rax,%rax,1)
	...
 75e:	00 00                	add    %al,(%rax)
 760:	d0 3f                	sarb   (%rdi)
 762:	00 00                	add    %al,(%rax)
 764:	00 00                	add    %al,(%rax)
 766:	00 00                	add    %al,(%rax)
 768:	06                   	(bad)  
 769:	00 00                	add    %al,(%rax)
 76b:	00 01                	add    %al,(%rcx)
	...
 775:	00 00                	add    %al,(%rax)
 777:	00 d8                	add    %bl,%al
 779:	3f                   	(bad)  
 77a:	00 00                	add    %al,(%rax)
 77c:	00 00                	add    %al,(%rax)
 77e:	00 00                	add    %al,(%rax)
 780:	06                   	(bad)  
 781:	00 00                	add    %al,(%rax)
 783:	00 07                	add    %al,(%rdi)
	...
 78d:	00 00                	add    %al,(%rax)
 78f:	00 e0                	add    %ah,%al
 791:	3f                   	(bad)  
 792:	00 00                	add    %al,(%rax)
 794:	00 00                	add    %al,(%rax)
 796:	00 00                	add    %al,(%rax)
 798:	06                   	(bad)  
 799:	00 00                	add    %al,(%rax)
 79b:	00 08                	add    %cl,(%rax)
	...
 7a5:	00 00                	add    %al,(%rax)
 7a7:	00 e8                	add    %ch,%al
 7a9:	3f                   	(bad)  
 7aa:	00 00                	add    %al,(%rax)
 7ac:	00 00                	add    %al,(%rax)
 7ae:	00 00                	add    %al,(%rax)
 7b0:	06                   	(bad)  
 7b1:	00 00                	add    %al,(%rax)
 7b3:	00 09                	add    %cl,(%rcx)
	...
 7bd:	00 00                	add    %al,(%rax)
 7bf:	00 f0                	add    %dh,%al
 7c1:	3f                   	(bad)  
 7c2:	00 00                	add    %al,(%rax)
 7c4:	00 00                	add    %al,(%rax)
 7c6:	00 00                	add    %al,(%rax)
 7c8:	06                   	(bad)  
 7c9:	00 00                	add    %al,(%rax)
 7cb:	00 0a                	add    %cl,(%rdx)
	...
 7d5:	00 00                	add    %al,(%rax)
 7d7:	00 f8                	add    %bh,%al
 7d9:	3f                   	(bad)  
 7da:	00 00                	add    %al,(%rax)
 7dc:	00 00                	add    %al,(%rax)
 7de:	00 00                	add    %al,(%rax)
 7e0:	06                   	(bad)  
 7e1:	00 00                	add    %al,(%rax)
 7e3:	00 0b                	add    %cl,(%rbx)
	...
 7ed:	00 00                	add    %al,(%rax)
 7ef:	00 40 40             	add    %al,0x40(%rax)
 7f2:	00 00                	add    %al,(%rax)
 7f4:	00 00                	add    %al,(%rax)
 7f6:	00 00                	add    %al,(%rax)
 7f8:	05 00 00 00 0d       	add    $0xd000000,%eax
	...

Disassembly of section .rela.plt:

0000000000000808 <.rela.plt>:
 808:	a0 3f 00 00 00 00 00 	movabs 0x70000000000003f,%al
 80f:	00 07 
 811:	00 00                	add    %al,(%rax)
 813:	00 02                	add    %al,(%rdx)
	...
 81d:	00 00                	add    %al,(%rax)
 81f:	00 a8 3f 00 00 00    	add    %ch,0x3f(%rax)
 825:	00 00                	add    %al,(%rax)
 827:	00 07                	add    %al,(%rdi)
 829:	00 00                	add    %al,(%rax)
 82b:	00 03                	add    %al,(%rbx)
	...
 835:	00 00                	add    %al,(%rax)
 837:	00 b0 3f 00 00 00    	add    %dh,0x3f(%rax)
 83d:	00 00                	add    %al,(%rax)
 83f:	00 07                	add    %al,(%rdi)
 841:	00 00                	add    %al,(%rax)
 843:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 84e:	00 00                	add    %al,(%rax)
 850:	b8 3f 00 00 00       	mov    $0x3f,%eax
 855:	00 00                	add    %al,(%rax)
 857:	00 07                	add    %al,(%rdi)
 859:	00 00                	add    %al,(%rax)
 85b:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 861 <_init-0x79f>
 861:	00 00                	add    %al,(%rax)
 863:	00 00                	add    %al,(%rax)
 865:	00 00                	add    %al,(%rax)
 867:	00 c0                	add    %al,%al
 869:	3f                   	(bad)  
 86a:	00 00                	add    %al,(%rax)
 86c:	00 00                	add    %al,(%rax)
 86e:	00 00                	add    %al,(%rax)
 870:	07                   	(bad)  
 871:	00 00                	add    %al,(%rax)
 873:	00 06                	add    %al,(%rsi)
	...

Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 6a 2f 00 00    	pushq  0x2f6a(%rip)        # 3f90 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 6b 2f 00 00 	bnd jmpq *0x2f6b(%rip)        # 3f98 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	pushq  $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmpq 1020 <.plt>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	pushq  $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmpq 1020 <.plt>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	pushq  $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmpq 1020 <.plt>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	pushq  $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmpq 1020 <.plt>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	pushq  $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmpq 1020 <.plt>
    107f:	90                   	nop

Disassembly of section .plt.got:

0000000000001080 <__cxa_finalize@plt>:
    1080:	f3 0f 1e fa          	endbr64 
    1084:	f2 ff 25 3d 2f 00 00 	bnd jmpq *0x2f3d(%rip)        # 3fc8 <__cxa_finalize@GLIBC_2.2.5>
    108b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001090 <__cxa_atexit@plt>:
    1090:	f3 0f 1e fa          	endbr64 
    1094:	f2 ff 25 05 2f 00 00 	bnd jmpq *0x2f05(%rip)        # 3fa0 <__cxa_atexit@GLIBC_2.2.5>
    109b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	f2 ff 25 fd 2e 00 00 	bnd jmpq *0x2efd(%rip)        # 3fa8 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@GLIBCXX_3.4>
    10ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010b0 <_ZNSolsEPFRSoS_E@plt>:
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	f2 ff 25 f5 2e 00 00 	bnd jmpq *0x2ef5(%rip)        # 3fb0 <_ZNSolsEPFRSoS_E@GLIBCXX_3.4>
    10bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010c0 <_ZNSt8ios_base4InitC1Ev@plt>:
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	f2 ff 25 ed 2e 00 00 	bnd jmpq *0x2eed(%rip)        # 3fb8 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
    10cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010d0 <_ZNSolsEi@plt>:
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	f2 ff 25 e5 2e 00 00 	bnd jmpq *0x2ee5(%rip)        # 3fc0 <_ZNSolsEi@GLIBCXX_3.4>
    10db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

00000000000010e0 <_start>:
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	31 ed                	xor    %ebp,%ebp
    10e6:	49 89 d1             	mov    %rdx,%r9
    10e9:	5e                   	pop    %rsi
    10ea:	48 89 e2             	mov    %rsp,%rdx
    10ed:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    10f1:	50                   	push   %rax
    10f2:	54                   	push   %rsp
    10f3:	4c 8d 05 16 02 00 00 	lea    0x216(%rip),%r8        # 1310 <__libc_csu_fini>
    10fa:	48 8d 0d 9f 01 00 00 	lea    0x19f(%rip),%rcx        # 12a0 <__libc_csu_init>
    1101:	48 8d 3d c1 00 00 00 	lea    0xc1(%rip),%rdi        # 11c9 <main>
    1108:	ff 15 d2 2e 00 00    	callq  *0x2ed2(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    110e:	f4                   	hlt    
    110f:	90                   	nop

0000000000001110 <deregister_tm_clones>:
    1110:	48 8d 3d f9 2e 00 00 	lea    0x2ef9(%rip),%rdi        # 4010 <__TMC_END__>
    1117:	48 8d 05 f2 2e 00 00 	lea    0x2ef2(%rip),%rax        # 4010 <__TMC_END__>
    111e:	48 39 f8             	cmp    %rdi,%rax
    1121:	74 15                	je     1138 <deregister_tm_clones+0x28>
    1123:	48 8b 05 ae 2e 00 00 	mov    0x2eae(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    112a:	48 85 c0             	test   %rax,%rax
    112d:	74 09                	je     1138 <deregister_tm_clones+0x28>
    112f:	ff e0                	jmpq   *%rax
    1131:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1138:	c3                   	retq   
    1139:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001140 <register_tm_clones>:
    1140:	48 8d 3d c9 2e 00 00 	lea    0x2ec9(%rip),%rdi        # 4010 <__TMC_END__>
    1147:	48 8d 35 c2 2e 00 00 	lea    0x2ec2(%rip),%rsi        # 4010 <__TMC_END__>
    114e:	48 29 fe             	sub    %rdi,%rsi
    1151:	48 89 f0             	mov    %rsi,%rax
    1154:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1158:	48 c1 f8 03          	sar    $0x3,%rax
    115c:	48 01 c6             	add    %rax,%rsi
    115f:	48 d1 fe             	sar    %rsi
    1162:	74 14                	je     1178 <register_tm_clones+0x38>
    1164:	48 8b 05 85 2e 00 00 	mov    0x2e85(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    116b:	48 85 c0             	test   %rax,%rax
    116e:	74 08                	je     1178 <register_tm_clones+0x38>
    1170:	ff e0                	jmpq   *%rax
    1172:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1178:	c3                   	retq   
    1179:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001180 <__do_global_dtors_aux>:
    1180:	f3 0f 1e fa          	endbr64 
    1184:	80 3d c5 2f 00 00 00 	cmpb   $0x0,0x2fc5(%rip)        # 4150 <completed.8061>
    118b:	75 2b                	jne    11b8 <__do_global_dtors_aux+0x38>
    118d:	55                   	push   %rbp
    118e:	48 83 3d 32 2e 00 00 	cmpq   $0x0,0x2e32(%rip)        # 3fc8 <__cxa_finalize@GLIBC_2.2.5>
    1195:	00 
    1196:	48 89 e5             	mov    %rsp,%rbp
    1199:	74 0c                	je     11a7 <__do_global_dtors_aux+0x27>
    119b:	48 8b 3d 66 2e 00 00 	mov    0x2e66(%rip),%rdi        # 4008 <__dso_handle>
    11a2:	e8 d9 fe ff ff       	callq  1080 <__cxa_finalize@plt>
    11a7:	e8 64 ff ff ff       	callq  1110 <deregister_tm_clones>
    11ac:	c6 05 9d 2f 00 00 01 	movb   $0x1,0x2f9d(%rip)        # 4150 <completed.8061>
    11b3:	5d                   	pop    %rbp
    11b4:	c3                   	retq   
    11b5:	0f 1f 00             	nopl   (%rax)
    11b8:	c3                   	retq   
    11b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011c0 <frame_dummy>:
    11c0:	f3 0f 1e fa          	endbr64 
    11c4:	e9 77 ff ff ff       	jmpq   1140 <register_tm_clones>

00000000000011c9 <main>:
    11c9:	f3 0f 1e fa          	endbr64 
    11cd:	55                   	push   %rbp
    11ce:	48 89 e5             	mov    %rsp,%rbp
    11d1:	bf 0b 00 00 00       	mov    $0xb,%edi
    11d6:	e8 07 00 00 00       	callq  11e2 <_Z6stampai>
    11db:	b8 00 00 00 00       	mov    $0x0,%eax
    11e0:	5d                   	pop    %rbp
    11e1:	c3                   	retq   

00000000000011e2 <_Z6stampai>:
    11e2:	f3 0f 1e fa          	endbr64 
    11e6:	55                   	push   %rbp
    11e7:	48 89 e5             	mov    %rsp,%rbp
    11ea:	48 83 ec 10          	sub    $0x10,%rsp
    11ee:	89 7d fc             	mov    %edi,-0x4(%rbp)
    11f1:	48 8d 35 0d 0e 00 00 	lea    0xe0d(%rip),%rsi        # 2005 <_ZStL19piecewise_construct+0x1>
    11f8:	48 8d 3d 41 2e 00 00 	lea    0x2e41(%rip),%rdi        # 4040 <_ZSt4cout@@GLIBCXX_3.4>
    11ff:	e8 9c fe ff ff       	callq  10a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    1204:	48 89 c2             	mov    %rax,%rdx
    1207:	8b 45 fc             	mov    -0x4(%rbp),%eax
    120a:	89 c6                	mov    %eax,%esi
    120c:	48 89 d7             	mov    %rdx,%rdi
    120f:	e8 bc fe ff ff       	callq  10d0 <_ZNSolsEi@plt>
    1214:	48 89 c2             	mov    %rax,%rdx
    1217:	48 8b 05 b2 2d 00 00 	mov    0x2db2(%rip),%rax        # 3fd0 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    121e:	48 89 c6             	mov    %rax,%rsi
    1221:	48 89 d7             	mov    %rdx,%rdi
    1224:	e8 87 fe ff ff       	callq  10b0 <_ZNSolsEPFRSoS_E@plt>
    1229:	90                   	nop
    122a:	c9                   	leaveq 
    122b:	c3                   	retq   

000000000000122c <_Z41__static_initialization_and_destruction_0ii>:
    122c:	f3 0f 1e fa          	endbr64 
    1230:	55                   	push   %rbp
    1231:	48 89 e5             	mov    %rsp,%rbp
    1234:	48 83 ec 10          	sub    $0x10,%rsp
    1238:	89 7d fc             	mov    %edi,-0x4(%rbp)
    123b:	89 75 f8             	mov    %esi,-0x8(%rbp)
    123e:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    1242:	75 32                	jne    1276 <_Z41__static_initialization_and_destruction_0ii+0x4a>
    1244:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    124b:	75 29                	jne    1276 <_Z41__static_initialization_and_destruction_0ii+0x4a>
    124d:	48 8d 3d 04 2f 00 00 	lea    0x2f04(%rip),%rdi        # 4158 <_ZStL8__ioinit>
    1254:	e8 67 fe ff ff       	callq  10c0 <_ZNSt8ios_base4InitC1Ev@plt>
    1259:	48 8d 15 a8 2d 00 00 	lea    0x2da8(%rip),%rdx        # 4008 <__dso_handle>
    1260:	48 8d 35 f1 2e 00 00 	lea    0x2ef1(%rip),%rsi        # 4158 <_ZStL8__ioinit>
    1267:	48 8b 05 8a 2d 00 00 	mov    0x2d8a(%rip),%rax        # 3ff8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    126e:	48 89 c7             	mov    %rax,%rdi
    1271:	e8 1a fe ff ff       	callq  1090 <__cxa_atexit@plt>
    1276:	90                   	nop
    1277:	c9                   	leaveq 
    1278:	c3                   	retq   

0000000000001279 <_GLOBAL__sub_I__Z6stampai>:
    1279:	f3 0f 1e fa          	endbr64 
    127d:	55                   	push   %rbp
    127e:	48 89 e5             	mov    %rsp,%rbp
    1281:	be ff ff 00 00       	mov    $0xffff,%esi
    1286:	bf 01 00 00 00       	mov    $0x1,%edi
    128b:	e8 9c ff ff ff       	callq  122c <_Z41__static_initialization_and_destruction_0ii>
    1290:	5d                   	pop    %rbp
    1291:	c3                   	retq   
    1292:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1299:	00 00 00 
    129c:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000012a0 <__libc_csu_init>:
    12a0:	f3 0f 1e fa          	endbr64 
    12a4:	41 57                	push   %r15
    12a6:	4c 8d 3d c3 2a 00 00 	lea    0x2ac3(%rip),%r15        # 3d70 <__frame_dummy_init_array_entry>
    12ad:	41 56                	push   %r14
    12af:	49 89 d6             	mov    %rdx,%r14
    12b2:	41 55                	push   %r13
    12b4:	49 89 f5             	mov    %rsi,%r13
    12b7:	41 54                	push   %r12
    12b9:	41 89 fc             	mov    %edi,%r12d
    12bc:	55                   	push   %rbp
    12bd:	48 8d 2d bc 2a 00 00 	lea    0x2abc(%rip),%rbp        # 3d80 <__do_global_dtors_aux_fini_array_entry>
    12c4:	53                   	push   %rbx
    12c5:	4c 29 fd             	sub    %r15,%rbp
    12c8:	48 83 ec 08          	sub    $0x8,%rsp
    12cc:	e8 2f fd ff ff       	callq  1000 <_init>
    12d1:	48 c1 fd 03          	sar    $0x3,%rbp
    12d5:	74 1f                	je     12f6 <__libc_csu_init+0x56>
    12d7:	31 db                	xor    %ebx,%ebx
    12d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    12e0:	4c 89 f2             	mov    %r14,%rdx
    12e3:	4c 89 ee             	mov    %r13,%rsi
    12e6:	44 89 e7             	mov    %r12d,%edi
    12e9:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    12ed:	48 83 c3 01          	add    $0x1,%rbx
    12f1:	48 39 dd             	cmp    %rbx,%rbp
    12f4:	75 ea                	jne    12e0 <__libc_csu_init+0x40>
    12f6:	48 83 c4 08          	add    $0x8,%rsp
    12fa:	5b                   	pop    %rbx
    12fb:	5d                   	pop    %rbp
    12fc:	41 5c                	pop    %r12
    12fe:	41 5d                	pop    %r13
    1300:	41 5e                	pop    %r14
    1302:	41 5f                	pop    %r15
    1304:	c3                   	retq   
    1305:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    130c:	00 00 00 00 

0000000000001310 <__libc_csu_fini>:
    1310:	f3 0f 1e fa          	endbr64 
    1314:	c3                   	retq   

Disassembly of section .fini:

0000000000001318 <_fini>:
    1318:	f3 0f 1e fa          	endbr64 
    131c:	48 83 ec 08          	sub    $0x8,%rsp
    1320:	48 83 c4 08          	add    $0x8,%rsp
    1324:	c3                   	retq   

Disassembly of section .rodata:

0000000000002000 <_IO_stdin_used>:
    2000:	01 00                	add    %eax,(%rax)
    2002:	02 00                	add    (%rax),%al

0000000000002004 <_ZStL19piecewise_construct>:
    2004:	00 48 65             	add    %cl,0x65(%rax)
    2007:	6c                   	insb   (%dx),%es:(%rdi)
    2008:	6c                   	insb   (%dx),%es:(%rdi)
    2009:	6f                   	outsl  %ds:(%rsi),(%dx)
    200a:	20 57 6f             	and    %dl,0x6f(%rdi)
    200d:	72 6c                	jb     207b <__GNU_EH_FRAME_HDR+0x63>
    200f:	64 21 20             	and    %esp,%fs:(%rax)
    2012:	61                   	(bad)  
    2013:	20 69 73             	and    %ch,0x73(%rcx)
    2016:	20 00                	and    %al,(%rax)

Disassembly of section .eh_frame_hdr:

0000000000002018 <__GNU_EH_FRAME_HDR>:
    2018:	01 1b                	add    %ebx,(%rbx)
    201a:	03 3b                	add    (%rbx),%edi
    201c:	5c                   	pop    %rsp
    201d:	00 00                	add    %al,(%rax)
    201f:	00 0a                	add    %cl,(%rdx)
    2021:	00 00                	add    %al,(%rax)
    2023:	00 08                	add    %cl,(%rax)
    2025:	f0 ff                	lock (bad) 
    2027:	ff 90 00 00 00 68    	callq  *0x68000000(%rax)
    202d:	f0 ff                	lock (bad) 
    202f:	ff                   	(bad)  
    2030:	b8 00 00 00 78       	mov    $0x78000000,%eax
    2035:	f0 ff                	lock (bad) 
    2037:	ff d0                	callq  *%rax
    2039:	00 00                	add    %al,(%rax)
    203b:	00 c8                	add    %cl,%al
    203d:	f0 ff                	lock (bad) 
    203f:	ff                   	(bad)  
    2040:	78 00                	js     2042 <__GNU_EH_FRAME_HDR+0x2a>
    2042:	00 00                	add    %al,(%rax)
    2044:	b1 f1                	mov    $0xf1,%cl
    2046:	ff                   	(bad)  
    2047:	ff                   	(bad)  
    2048:	e8 00 00 00 ca       	callq  ffffffffca00204d <_end+0xffffffffc9ffdeed>
    204d:	f1                   	icebp  
    204e:	ff                   	(bad)  
    204f:	ff 08                	decl   (%rax)
    2051:	01 00                	add    %eax,(%rax)
    2053:	00 14 f2             	add    %dl,(%rdx,%rsi,8)
    2056:	ff                   	(bad)  
    2057:	ff 28                	ljmp   *(%rax)
    2059:	01 00                	add    %eax,(%rax)
    205b:	00 61 f2             	add    %ah,-0xe(%rcx)
    205e:	ff                   	(bad)  
    205f:	ff 48 01             	decl   0x1(%rax)
    2062:	00 00                	add    %al,(%rax)
    2064:	88 f2                	mov    %dh,%dl
    2066:	ff                   	(bad)  
    2067:	ff 68 01             	ljmp   *0x1(%rax)
    206a:	00 00                	add    %al,(%rax)
    206c:	f8                   	clc    
    206d:	f2 ff                	repnz (bad) 
    206f:	ff                   	.byte 0xff
    2070:	b0 01                	mov    $0x1,%al
	...

Disassembly of section .eh_frame:

0000000000002078 <__FRAME_END__-0x164>:
    2078:	14 00                	adc    $0x0,%al
    207a:	00 00                	add    %al,(%rax)
    207c:	00 00                	add    %al,(%rax)
    207e:	00 00                	add    %al,(%rax)
    2080:	01 7a 52             	add    %edi,0x52(%rdx)
    2083:	00 01                	add    %al,(%rcx)
    2085:	78 10                	js     2097 <__GNU_EH_FRAME_HDR+0x7f>
    2087:	01 1b                	add    %ebx,(%rbx)
    2089:	0c 07                	or     $0x7,%al
    208b:	08 90 01 00 00 14    	or     %dl,0x14000001(%rax)
    2091:	00 00                	add    %al,(%rax)
    2093:	00 1c 00             	add    %bl,(%rax,%rax,1)
    2096:	00 00                	add    %al,(%rax)
    2098:	48                   	rex.W
    2099:	f0 ff                	lock (bad) 
    209b:	ff 2f                	ljmp   *(%rdi)
    209d:	00 00                	add    %al,(%rax)
    209f:	00 00                	add    %al,(%rax)
    20a1:	44 07                	rex.R (bad) 
    20a3:	10 00                	adc    %al,(%rax)
    20a5:	00 00                	add    %al,(%rax)
    20a7:	00 24 00             	add    %ah,(%rax,%rax,1)
    20aa:	00 00                	add    %al,(%rax)
    20ac:	34 00                	xor    $0x0,%al
    20ae:	00 00                	add    %al,(%rax)
    20b0:	70 ef                	jo     20a1 <__GNU_EH_FRAME_HDR+0x89>
    20b2:	ff                   	(bad)  
    20b3:	ff 60 00             	jmpq   *0x0(%rax)
    20b6:	00 00                	add    %al,(%rax)
    20b8:	00 0e                	add    %cl,(%rsi)
    20ba:	10 46 0e             	adc    %al,0xe(%rsi)
    20bd:	18 4a 0f             	sbb    %cl,0xf(%rdx)
    20c0:	0b 77 08             	or     0x8(%rdi),%esi
    20c3:	80 00 3f             	addb   $0x3f,(%rax)
    20c6:	1a 3a                	sbb    (%rdx),%bh
    20c8:	2a 33                	sub    (%rbx),%dh
    20ca:	24 22                	and    $0x22,%al
    20cc:	00 00                	add    %al,(%rax)
    20ce:	00 00                	add    %al,(%rax)
    20d0:	14 00                	adc    $0x0,%al
    20d2:	00 00                	add    %al,(%rax)
    20d4:	5c                   	pop    %rsp
    20d5:	00 00                	add    %al,(%rax)
    20d7:	00 a8 ef ff ff 10    	add    %ch,0x10ffffef(%rax)
	...
    20e5:	00 00                	add    %al,(%rax)
    20e7:	00 14 00             	add    %dl,(%rax,%rax,1)
    20ea:	00 00                	add    %al,(%rax)
    20ec:	74 00                	je     20ee <__GNU_EH_FRAME_HDR+0xd6>
    20ee:	00 00                	add    %al,(%rax)
    20f0:	a0 ef ff ff 50 00 00 	movabs 0x50ffffef,%al
    20f7:	00 00 
    20f9:	00 00                	add    %al,(%rax)
    20fb:	00 00                	add    %al,(%rax)
    20fd:	00 00                	add    %al,(%rax)
    20ff:	00 1c 00             	add    %bl,(%rax,%rax,1)
    2102:	00 00                	add    %al,(%rax)
    2104:	8c 00                	mov    %es,(%rax)
    2106:	00 00                	add    %al,(%rax)
    2108:	c1 f0 ff             	shl    $0xff,%eax
    210b:	ff 19                	lcall  *(%rcx)
    210d:	00 00                	add    %al,(%rax)
    210f:	00 00                	add    %al,(%rax)
    2111:	45 0e                	rex.RB (bad) 
    2113:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2119:	50                   	push   %rax
    211a:	0c 07                	or     $0x7,%al
    211c:	08 00                	or     %al,(%rax)
    211e:	00 00                	add    %al,(%rax)
    2120:	1c 00                	sbb    $0x0,%al
    2122:	00 00                	add    %al,(%rax)
    2124:	ac                   	lods   %ds:(%rsi),%al
    2125:	00 00                	add    %al,(%rax)
    2127:	00 ba f0 ff ff 4a    	add    %bh,0x4afffff0(%rdx)
    212d:	00 00                	add    %al,(%rax)
    212f:	00 00                	add    %al,(%rax)
    2131:	45 0e                	rex.RB (bad) 
    2133:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2139:	02 41 0c             	add    0xc(%rcx),%al
    213c:	07                   	(bad)  
    213d:	08 00                	or     %al,(%rax)
    213f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    2142:	00 00                	add    %al,(%rax)
    2144:	cc                   	int3   
    2145:	00 00                	add    %al,(%rax)
    2147:	00 e4                	add    %ah,%ah
    2149:	f0 ff                	lock (bad) 
    214b:	ff 4d 00             	decl   0x0(%rbp)
    214e:	00 00                	add    %al,(%rax)
    2150:	00 45 0e             	add    %al,0xe(%rbp)
    2153:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2159:	02 44 0c 07          	add    0x7(%rsp,%rcx,1),%al
    215d:	08 00                	or     %al,(%rax)
    215f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    2162:	00 00                	add    %al,(%rax)
    2164:	ec                   	in     (%dx),%al
    2165:	00 00                	add    %al,(%rax)
    2167:	00 11                	add    %dl,(%rcx)
    2169:	f1                   	icebp  
    216a:	ff                   	(bad)  
    216b:	ff 19                	lcall  *(%rcx)
    216d:	00 00                	add    %al,(%rax)
    216f:	00 00                	add    %al,(%rax)
    2171:	45 0e                	rex.RB (bad) 
    2173:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2179:	50                   	push   %rax
    217a:	0c 07                	or     $0x7,%al
    217c:	08 00                	or     %al,(%rax)
    217e:	00 00                	add    %al,(%rax)
    2180:	44 00 00             	add    %r8b,(%rax)
    2183:	00 0c 01             	add    %cl,(%rcx,%rax,1)
    2186:	00 00                	add    %al,(%rax)
    2188:	18 f1                	sbb    %dh,%cl
    218a:	ff                   	(bad)  
    218b:	ff 65 00             	jmpq   *0x0(%rbp)
    218e:	00 00                	add    %al,(%rax)
    2190:	00 46 0e             	add    %al,0xe(%rsi)
    2193:	10 8f 02 49 0e 18    	adc    %cl,0x180e4902(%rdi)
    2199:	8e 03                	mov    (%rbx),%es
    219b:	45 0e                	rex.RB (bad) 
    219d:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
    21a3:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff86302fed <_end+0xffffffff862fee8d>
    21a9:	06                   	(bad)  
    21aa:	48 0e                	rex.W (bad) 
    21ac:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
    21b2:	6e                   	outsb  %ds:(%rsi),(%dx)
    21b3:	0e                   	(bad)  
    21b4:	38 41 0e             	cmp    %al,0xe(%rcx)
    21b7:	30 41 0e             	xor    %al,0xe(%rcx)
    21ba:	28 42 0e             	sub    %al,0xe(%rdx)
    21bd:	20 42 0e             	and    %al,0xe(%rdx)
    21c0:	18 42 0e             	sbb    %al,0xe(%rdx)
    21c3:	10 42 0e             	adc    %al,0xe(%rdx)
    21c6:	08 00                	or     %al,(%rax)
    21c8:	10 00                	adc    %al,(%rax)
    21ca:	00 00                	add    %al,(%rax)
    21cc:	54                   	push   %rsp
    21cd:	01 00                	add    %eax,(%rax)
    21cf:	00 40 f1             	add    %al,-0xf(%rax)
    21d2:	ff                   	(bad)  
    21d3:	ff 05 00 00 00 00    	incl   0x0(%rip)        # 21d9 <__GNU_EH_FRAME_HDR+0x1c1>
    21d9:	00 00                	add    %al,(%rax)
	...

00000000000021dc <__FRAME_END__>:
    21dc:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000003d70 <__frame_dummy_init_array_entry>:
    3d70:	c0 11 00             	rclb   $0x0,(%rcx)
    3d73:	00 00                	add    %al,(%rax)
    3d75:	00 00                	add    %al,(%rax)
    3d77:	00 79 12             	add    %bh,0x12(%rcx)
    3d7a:	00 00                	add    %al,(%rax)
    3d7c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000003d80 <__do_global_dtors_aux_fini_array_entry>:
    3d80:	80 11 00             	adcb   $0x0,(%rcx)
    3d83:	00 00                	add    %al,(%rax)
    3d85:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000003d88 <_DYNAMIC>:
    3d88:	01 00                	add    %eax,(%rax)
    3d8a:	00 00                	add    %al,(%rax)
    3d8c:	00 00                	add    %al,(%rax)
    3d8e:	00 00                	add    %al,(%rax)
    3d90:	01 00                	add    %eax,(%rax)
    3d92:	00 00                	add    %al,(%rax)
    3d94:	00 00                	add    %al,(%rax)
    3d96:	00 00                	add    %al,(%rax)
    3d98:	01 00                	add    %eax,(%rax)
    3d9a:	00 00                	add    %al,(%rax)
    3d9c:	00 00                	add    %al,(%rax)
    3d9e:	00 00                	add    %al,(%rax)
    3da0:	1d 01 00 00 00       	sbb    $0x1,%eax
    3da5:	00 00                	add    %al,(%rax)
    3da7:	00 0c 00             	add    %cl,(%rax,%rax,1)
    3daa:	00 00                	add    %al,(%rax)
    3dac:	00 00                	add    %al,(%rax)
    3dae:	00 00                	add    %al,(%rax)
    3db0:	00 10                	add    %dl,(%rax)
    3db2:	00 00                	add    %al,(%rax)
    3db4:	00 00                	add    %al,(%rax)
    3db6:	00 00                	add    %al,(%rax)
    3db8:	0d 00 00 00 00       	or     $0x0,%eax
    3dbd:	00 00                	add    %al,(%rax)
    3dbf:	00 18                	add    %bl,(%rax)
    3dc1:	13 00                	adc    (%rax),%eax
    3dc3:	00 00                	add    %al,(%rax)
    3dc5:	00 00                	add    %al,(%rax)
    3dc7:	00 19                	add    %bl,(%rcx)
    3dc9:	00 00                	add    %al,(%rax)
    3dcb:	00 00                	add    %al,(%rax)
    3dcd:	00 00                	add    %al,(%rax)
    3dcf:	00 70 3d             	add    %dh,0x3d(%rax)
    3dd2:	00 00                	add    %al,(%rax)
    3dd4:	00 00                	add    %al,(%rax)
    3dd6:	00 00                	add    %al,(%rax)
    3dd8:	1b 00                	sbb    (%rax),%eax
    3dda:	00 00                	add    %al,(%rax)
    3ddc:	00 00                	add    %al,(%rax)
    3dde:	00 00                	add    %al,(%rax)
    3de0:	10 00                	adc    %al,(%rax)
    3de2:	00 00                	add    %al,(%rax)
    3de4:	00 00                	add    %al,(%rax)
    3de6:	00 00                	add    %al,(%rax)
    3de8:	1a 00                	sbb    (%rax),%al
    3dea:	00 00                	add    %al,(%rax)
    3dec:	00 00                	add    %al,(%rax)
    3dee:	00 00                	add    %al,(%rax)
    3df0:	80 3d 00 00 00 00 00 	cmpb   $0x0,0x0(%rip)        # 3df7 <_DYNAMIC+0x6f>
    3df7:	00 1c 00             	add    %bl,(%rax,%rax,1)
    3dfa:	00 00                	add    %al,(%rax)
    3dfc:	00 00                	add    %al,(%rax)
    3dfe:	00 00                	add    %al,(%rax)
    3e00:	08 00                	or     %al,(%rax)
    3e02:	00 00                	add    %al,(%rax)
    3e04:	00 00                	add    %al,(%rax)
    3e06:	00 00                	add    %al,(%rax)
    3e08:	f5                   	cmc    
    3e09:	fe                   	(bad)  
    3e0a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3e0d:	00 00                	add    %al,(%rax)
    3e0f:	00 a0 03 00 00 00    	add    %ah,0x3(%rax)
    3e15:	00 00                	add    %al,(%rax)
    3e17:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 3e1d <_DYNAMIC+0x95>
    3e1d:	00 00                	add    %al,(%rax)
    3e1f:	00 18                	add    %bl,(%rax)
    3e21:	05 00 00 00 00       	add    $0x0,%eax
    3e26:	00 00                	add    %al,(%rax)
    3e28:	06                   	(bad)  
    3e29:	00 00                	add    %al,(%rax)
    3e2b:	00 00                	add    %al,(%rax)
    3e2d:	00 00                	add    %al,(%rax)
    3e2f:	00 c8                	add    %cl,%al
    3e31:	03 00                	add    (%rax),%eax
    3e33:	00 00                	add    %al,(%rax)
    3e35:	00 00                	add    %al,(%rax)
    3e37:	00 0a                	add    %cl,(%rdx)
    3e39:	00 00                	add    %al,(%rax)
    3e3b:	00 00                	add    %al,(%rax)
    3e3d:	00 00                	add    %al,(%rax)
    3e3f:	00 6d 01             	add    %ch,0x1(%rbp)
    3e42:	00 00                	add    %al,(%rax)
    3e44:	00 00                	add    %al,(%rax)
    3e46:	00 00                	add    %al,(%rax)
    3e48:	0b 00                	or     (%rax),%eax
    3e4a:	00 00                	add    %al,(%rax)
    3e4c:	00 00                	add    %al,(%rax)
    3e4e:	00 00                	add    %al,(%rax)
    3e50:	18 00                	sbb    %al,(%rax)
    3e52:	00 00                	add    %al,(%rax)
    3e54:	00 00                	add    %al,(%rax)
    3e56:	00 00                	add    %al,(%rax)
    3e58:	15 00 00 00 00       	adc    $0x0,%eax
	...
    3e65:	00 00                	add    %al,(%rax)
    3e67:	00 03                	add    %al,(%rbx)
    3e69:	00 00                	add    %al,(%rax)
    3e6b:	00 00                	add    %al,(%rax)
    3e6d:	00 00                	add    %al,(%rax)
    3e6f:	00 88 3f 00 00 00    	add    %cl,0x3f(%rax)
    3e75:	00 00                	add    %al,(%rax)
    3e77:	00 02                	add    %al,(%rdx)
    3e79:	00 00                	add    %al,(%rax)
    3e7b:	00 00                	add    %al,(%rax)
    3e7d:	00 00                	add    %al,(%rax)
    3e7f:	00 78 00             	add    %bh,0x0(%rax)
    3e82:	00 00                	add    %al,(%rax)
    3e84:	00 00                	add    %al,(%rax)
    3e86:	00 00                	add    %al,(%rax)
    3e88:	14 00                	adc    $0x0,%al
    3e8a:	00 00                	add    %al,(%rax)
    3e8c:	00 00                	add    %al,(%rax)
    3e8e:	00 00                	add    %al,(%rax)
    3e90:	07                   	(bad)  
    3e91:	00 00                	add    %al,(%rax)
    3e93:	00 00                	add    %al,(%rax)
    3e95:	00 00                	add    %al,(%rax)
    3e97:	00 17                	add    %dl,(%rdi)
    3e99:	00 00                	add    %al,(%rax)
    3e9b:	00 00                	add    %al,(%rax)
    3e9d:	00 00                	add    %al,(%rax)
    3e9f:	00 08                	add    %cl,(%rax)
    3ea1:	08 00                	or     %al,(%rax)
    3ea3:	00 00                	add    %al,(%rax)
    3ea5:	00 00                	add    %al,(%rax)
    3ea7:	00 07                	add    %al,(%rdi)
    3ea9:	00 00                	add    %al,(%rax)
    3eab:	00 00                	add    %al,(%rax)
    3ead:	00 00                	add    %al,(%rax)
    3eaf:	00 e8                	add    %ch,%al
    3eb1:	06                   	(bad)  
    3eb2:	00 00                	add    %al,(%rax)
    3eb4:	00 00                	add    %al,(%rax)
    3eb6:	00 00                	add    %al,(%rax)
    3eb8:	08 00                	or     %al,(%rax)
    3eba:	00 00                	add    %al,(%rax)
    3ebc:	00 00                	add    %al,(%rax)
    3ebe:	00 00                	add    %al,(%rax)
    3ec0:	20 01                	and    %al,(%rcx)
    3ec2:	00 00                	add    %al,(%rax)
    3ec4:	00 00                	add    %al,(%rax)
    3ec6:	00 00                	add    %al,(%rax)
    3ec8:	09 00                	or     %eax,(%rax)
    3eca:	00 00                	add    %al,(%rax)
    3ecc:	00 00                	add    %al,(%rax)
    3ece:	00 00                	add    %al,(%rax)
    3ed0:	18 00                	sbb    %al,(%rax)
    3ed2:	00 00                	add    %al,(%rax)
    3ed4:	00 00                	add    %al,(%rax)
    3ed6:	00 00                	add    %al,(%rax)
    3ed8:	1e                   	(bad)  
    3ed9:	00 00                	add    %al,(%rax)
    3edb:	00 00                	add    %al,(%rax)
    3edd:	00 00                	add    %al,(%rax)
    3edf:	00 08                	add    %cl,(%rax)
    3ee1:	00 00                	add    %al,(%rax)
    3ee3:	00 00                	add    %al,(%rax)
    3ee5:	00 00                	add    %al,(%rax)
    3ee7:	00 fb                	add    %bh,%bl
    3ee9:	ff                   	(bad)  
    3eea:	ff 6f 00             	ljmp   *0x0(%rdi)
    3eed:	00 00                	add    %al,(%rax)
    3eef:	00 01                	add    %al,(%rcx)
    3ef1:	00 00                	add    %al,(%rax)
    3ef3:	08 00                	or     %al,(%rax)
    3ef5:	00 00                	add    %al,(%rax)
    3ef7:	00 fe                	add    %bh,%dh
    3ef9:	ff                   	(bad)  
    3efa:	ff 6f 00             	ljmp   *0x0(%rdi)
    3efd:	00 00                	add    %al,(%rax)
    3eff:	00 a8 06 00 00 00    	add    %ch,0x6(%rax)
    3f05:	00 00                	add    %al,(%rax)
    3f07:	00 ff                	add    %bh,%bh
    3f09:	ff                   	(bad)  
    3f0a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f0d:	00 00                	add    %al,(%rax)
    3f0f:	00 02                	add    %al,(%rdx)
    3f11:	00 00                	add    %al,(%rax)
    3f13:	00 00                	add    %al,(%rax)
    3f15:	00 00                	add    %al,(%rax)
    3f17:	00 f0                	add    %dh,%al
    3f19:	ff                   	(bad)  
    3f1a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f1d:	00 00                	add    %al,(%rax)
    3f1f:	00 86 06 00 00 00    	add    %al,0x6(%rsi)
    3f25:	00 00                	add    %al,(%rax)
    3f27:	00 f9                	add    %bh,%cl
    3f29:	ff                   	(bad)  
    3f2a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f2d:	00 00                	add    %al,(%rax)
    3f2f:	00 04 00             	add    %al,(%rax,%rax,1)
	...

Disassembly of section .got:

0000000000003f88 <_GLOBAL_OFFSET_TABLE_>:
    3f88:	88 3d 00 00 00 00    	mov    %bh,0x0(%rip)        # 3f8e <_GLOBAL_OFFSET_TABLE_+0x6>
	...
    3f9e:	00 00                	add    %al,(%rax)
    3fa0:	30 10                	xor    %dl,(%rax)
    3fa2:	00 00                	add    %al,(%rax)
    3fa4:	00 00                	add    %al,(%rax)
    3fa6:	00 00                	add    %al,(%rax)
    3fa8:	40 10 00             	adc    %al,(%rax)
    3fab:	00 00                	add    %al,(%rax)
    3fad:	00 00                	add    %al,(%rax)
    3faf:	00 50 10             	add    %dl,0x10(%rax)
    3fb2:	00 00                	add    %al,(%rax)
    3fb4:	00 00                	add    %al,(%rax)
    3fb6:	00 00                	add    %al,(%rax)
    3fb8:	60                   	(bad)  
    3fb9:	10 00                	adc    %al,(%rax)
    3fbb:	00 00                	add    %al,(%rax)
    3fbd:	00 00                	add    %al,(%rax)
    3fbf:	00 70 10             	add    %dh,0x10(%rax)
	...

Disassembly of section .data:

0000000000004000 <__data_start>:
	...

0000000000004008 <__dso_handle>:
    4008:	08 40 00             	or     %al,0x0(%rax)
    400b:	00 00                	add    %al,(%rax)
    400d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

0000000000004040 <_ZSt4cout@@GLIBCXX_3.4>:
	...

0000000000004150 <completed.8061>:
    4150:	00 00                	add    %al,(%rax)
	...

0000000000004154 <x>:
    4154:	00 00                	add    %al,(%rax)
	...

0000000000004158 <_ZStL8__ioinit>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0xf88>
   a:	74 75                	je     81 <_init-0xf7f>
   c:	20 39                	and    %bh,(%rcx)
   e:	2e 34 2e             	cs xor $0x2e,%al
  11:	30 2d 31 75 62 75    	xor    %ch,0x75627531(%rip)        # 75627548 <_end+0x756233e8>
  17:	6e                   	outsb  %ds:(%rsi),(%dx)
  18:	74 75                	je     8f <_init-0xf71>
  1a:	31 7e 32             	xor    %edi,0x32(%rsi)
  1d:	30 2e                	xor    %ch,(%rsi)
  1f:	30 34 2e             	xor    %dh,(%rsi,%rbp,1)
  22:	31 29                	xor    %ebp,(%rcx)
  24:	20 39                	and    %bh,(%rcx)
  26:	2e 34 2e             	cs xor $0x2e,%al
  29:	30 00                	xor    %al,(%rax)
